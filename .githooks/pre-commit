#!/bin/bash

# Simple pre-commit hook for branch protection
# Make this file executable: chmod +x .githooks/pre-commit

set -e

echo "üîç Running pre-commit checks..."

# Get current branch name
BRANCH=$(git rev-parse --abbrev-ref HEAD)
echo "Current branch: $BRANCH"

# 1. Branch naming convention check
if [[ "$BRANCH" != "main" && "$BRANCH" != "develop" ]]; then
  if [[ ! "$BRANCH" =~ ^(feature|bugfix|hotfix)/.+ ]]; then
    echo "‚ùå Branch name must start with feature/, bugfix/, or hotfix/"
    echo "   Current branch: $BRANCH"
    echo "   Example: feature/add-user-auth or bugfix/fix-login-error"
    exit 1
  fi
fi

# 2. Prevent direct commits to protected branches
PROTECTED_BRANCHES="main develop"
for protected in $PROTECTED_BRANCHES; do
  if [[ "$BRANCH" == "$protected" ]]; then
    echo "‚ùå Direct commits to '$protected' branch are not allowed"
    echo "   Please create a feature branch and submit a PR"
    exit 1
  fi
done

# 3. Run ESLint on staged files
STAGED_JS_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(js|jsx|ts|tsx)$' || true)

if [[ -n "$STAGED_JS_FILES" ]]; then
  echo "üìù Running ESLint on staged files..."
  
  # Check if ESLint is available
  if ! command -v npx &> /dev/null; then
    echo "‚ùå npx not found. Please install Node.js and npm"
    exit 1
  fi
  
  # Run ESLint on staged files
  echo "$STAGED_JS_FILES" | xargs npx eslint
  
  if [[ $? -ne 0 ]]; then
    echo "‚ùå ESLint failed. Please fix the errors before committing"
    exit 1
  fi
  
  echo "‚úÖ ESLint passed"
else
  echo "‚ÑπÔ∏è  No JavaScript/TypeScript files to lint"
fi

# 4. Check for common issues
echo "üîç Checking for common issues..."

# Check for TODO/FIXME comments in staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM || true)
if [[ -n "$STAGED_FILES" ]]; then
  TODO_COUNT=$(echo "$STAGED_FILES" | xargs grep -l "TODO\|FIXME" 2>/dev/null | wc -l || echo "0")
  if [[ $TODO_COUNT -gt 0 ]]; then
    echo "‚ö†Ô∏è  Warning: Found $TODO_COUNT file(s) with TODO/FIXME comments"
    echo "$STAGED_FILES" | xargs grep -n "TODO\|FIXME" 2>/dev/null || true
    echo "   Consider addressing these before committing"
  fi
fi

# Check for console.log statements (except console.error/warn)
if [[ -n "$STAGED_JS_FILES" ]]; then
  CONSOLE_LOGS=$(echo "$STAGED_JS_FILES" | xargs grep -n "console\.log" 2>/dev/null || true)
  if [[ -n "$CONSOLE_LOGS" ]]; then
    echo "‚ö†Ô∏è  Warning: Found console.log statements:"
    echo "$CONSOLE_LOGS"
    echo "   Consider removing debug logs before committing"
  fi
fi

echo "‚úÖ Pre-commit checks passed!"
